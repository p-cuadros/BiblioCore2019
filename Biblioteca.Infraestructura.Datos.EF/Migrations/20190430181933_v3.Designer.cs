// <auto-generated />
using System;
using Biblioteca.Infraestructura.Datos.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.Infraestructura.Datos.EF.Migrations
{
    [DbContext(typeof(BibliotecaContexto))]
    [Migration("20190430181933_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Autor", b =>
                {
                    b.Property<int>("IDAutor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("IDAutor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Ejemplar", b =>
                {
                    b.Property<int>("IDEjemplar")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDLibro");

                    b.HasKey("IDEjemplar");

                    b.HasIndex("IDLibro");

                    b.ToTable("Ejemplares");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Libro", b =>
                {
                    b.Property<int>("IDLibro")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDEditorial");

                    b.Property<string>("ISBN");

                    b.Property<int>("NumeroPaginas");

                    b.Property<byte>("TipoLibro");

                    b.Property<string>("TituloLibro");

                    b.HasKey("IDLibro");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.LibroAutor", b =>
                {
                    b.Property<int>("IDLibro");

                    b.Property<int>("IDAutor");

                    b.HasKey("IDLibro", "IDAutor");

                    b.HasIndex("IDAutor");

                    b.ToTable("LibroAutores");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Prestamo", b =>
                {
                    b.Property<int>("IDPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaDevolucion");

                    b.Property<DateTime>("FechaPrestamo");

                    b.Property<int>("IDEjemplar");

                    b.Property<int>("IDUsuario");

                    b.HasKey("IDPrestamo");

                    b.HasIndex("IDEjemplar");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Ejemplar", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Entidades.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IDLibro")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.LibroAutor", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Entidades.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("IDAutor")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Biblioteca.Dominio.Entidades.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IDLibro")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Biblioteca.Dominio.Entidades.Prestamo", b =>
                {
                    b.HasOne("Biblioteca.Dominio.Entidades.Ejemplar", "EjemplarPrestado")
                        .WithMany()
                        .HasForeignKey("IDEjemplar")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Biblioteca.Dominio.Entidades.Usuario", "Lector")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
